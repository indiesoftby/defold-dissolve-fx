local dissolve_fx = require("dissolve_fx.dissolve_fx")

local function play_dissolve(sprite_url, duration, delay1, delay2)
    go.set(sprite_url, "dissolve.w", 0.0) -- initial value
    go.animate(sprite_url, "dissolve.w", go.PLAYBACK_ONCE_FORWARD, 1, go.EASING_LINEAR, duration, delay1, function ()
        go.animate(sprite_url, "dissolve.w", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, duration, delay2, function ()
            play_dissolve(sprite_url, duration, delay1, delay2)
        end)
    end)
end

function init(self)
    msg.post(".", "acquire_input_focus")
    msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })

    --
    -- Vertical
    --
    local sprite1_url = "/obj#logo_vertical"
    dissolve_fx.init(sprite1_url, "noise", "ramp", "stretch") -- args: sprite component with the dissolve material, noise image name, ramp image name, scale mode.
    go.set(sprite1_url, "dissolve.z", 0.25) -- size of the burn
    go.set(sprite1_url, "dissolve.w", 0.0) -- to control the fx, 0.0 - 1.0

    -- play the fx in a loop
    play_dissolve(sprite1_url, 1.25, 0.25, 0.5)

    --
    -- Horizontal
    --
    local sprite2_url = "/obj#logo_horizontal"
    dissolve_fx.init(sprite2_url, "noise", "ramp", "cover") -- args: sprite component with the dissolve material, noise image name, ramp image name, scale mode.
    go.set(sprite2_url, "dissolve.z", 0.1) -- size of the burn
    go.set(sprite2_url, "dissolve.w", 0.0) -- to control the fx, 0.0 - 1.0

    -- play the fx in a loop
    play_dissolve(sprite2_url, 1.25, 0.25, 0.5)
end

function on_input(self, action_id, action)
end
